apply plugin: 'java'
apply plugin: 'java-library-distribution'
apply plugin: 'application'

repositories {
  jcenter()
  mavenCentral()
  
  maven {
    url 'https://oss.sonatype.org/content/repositories/snapshots/' 
  }
}

compileJava {
  options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

dependencies {
  compile 'org.controlsfx:controlsfx:8.40.14'
  compile 'org.fxmisc.wellbehaved:wellbehavedfx:0.3'
  compile 'org.fxmisc.richtext:richtextfx:0.8.1'
  compile 'com.miglayout:miglayout-javafx:5.0'
  //compile 'de.jensd:fontawesomefx-fontawesome:4.5.0'
  compile 'org.ahocorasick:ahocorasick:0.4.0'
  compile 'com.vladsch.flexmark:flexmark:0.28.34'
  compile 'com.vladsch.flexmark:flexmark-ext-tables:0.28.34'
  compile 'com.vladsch.flexmark:flexmark-ext-superscript:0.28.34'
  compile 'com.vladsch.flexmark:flexmark-ext-gfm-strikethrough:0.28.34'
  compile 'com.fasterxml.jackson.core:jackson-core:2.9.3'
  compile 'com.fasterxml.jackson.core:jackson-databind:2.9.3'
  compile 'com.fasterxml.jackson.core:jackson-annotations:2.9.3'
  compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.3'
  compile 'org.yaml:snakeyaml:1.19'
  compile 'com.ximpleware:vtd-xml:2.13.4'
  compile 'net.sf.saxon:Saxon-HE:9.8.0-7'
  compile 'com.googlecode.juniversalchardet:juniversalchardet:1.0.3'
  compile 'org.apache.commons:commons-configuration2:2.2'
  compile files('libs/fontawesomefx-commons-8.12.jar')
  compile files('libs/fontawesomefx-fontawesome-4.5.0.jar')
  compile files('libs/renjin-script-engine-0.9.2726-jar-with-dependencies.jar')
}

version = '1.3.8'
applicationName = 'scrivenvar'
mainClassName = 'com.scrivenvar.Main'
sourceCompatibility = JavaVersion.VERSION_1_8

jar {
  baseName = applicationName
  archiveName = "${applicationName}.jar"
  
  doFirst {
    from {
      configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
  }

  // Remove digital signature files to ensure an executable JAR file.
  exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA' 

  manifest {
    attributes 'Main-Class': mainClassName
    attributes 'Class-Path': configurations.compile.collect {
     'libs/' + it.getName()
    }.join(' ')
  }
}

distributions {
  main {
    baseName = applicationName
    contents {
      from { ['LICENSE.md', 'README.md'] }
      into( 'images' ) {
        from { 'images' }
      }
    }
  }
}
