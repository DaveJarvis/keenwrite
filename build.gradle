apply plugin: 'java'
apply plugin: 'java-library-distribution'
apply plugin: 'application'

repositories {
  jcenter()
  
  maven {
    url 'https://oss.sonatype.org/content/repositories/snapshots/' 
  }
}

compileJava {
  options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

dependencies {
  compile 'org.controlsfx:controlsfx:8.40.12'
  //compile 'org.fxmisc.richtext:richtextfx:0.7-M4'
  compile group: 'org.fxmisc.richtext', name: 'richtextfx', version: '1.0.0-SNAPSHOT'
  compile 'com.miglayout:miglayout-javafx:5.0'
  compile 'de.jensd:fontawesomefx-fontawesome:4.5.0'
  compile 'org.ahocorasick:ahocorasick:0.3.0'
  compile 'com.vladsch.flexmark:flexmark:0.18.5'
  compile 'com.vladsch.flexmark:flexmark-ext-tables:0.18.5'
  compile 'com.vladsch.flexmark:flexmark-ext-superscript:0.18.5'
  compile 'com.vladsch.flexmark:flexmark-ext-gfm-strikethrough:0.18.5'
  compile 'com.fasterxml.jackson.core:jackson-core:2.8.4'
  compile 'com.fasterxml.jackson.core:jackson-databind:2.8.4'
  compile 'com.fasterxml.jackson.core:jackson-annotations:2.8.4'
  compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.8.4'
  compile 'org.yaml:snakeyaml:1.17'
  compile 'com.ximpleware:vtd-xml:2.13'
  compile 'net.sf.saxon:Saxon-HE:9.7.0-14'
  compile 'com.googlecode.juniversalchardet:juniversalchardet:1.0.3'
  compile 'org.apache.commons:commons-configuration2:2.1'
  compile files('libs/renjin-script-engine-0.8.2414-jar-with-dependencies.jar')
}

version = '1.2.11'
applicationName = 'scrivenvar'
mainClassName = 'com.scrivenvar.Main'
sourceCompatibility = JavaVersion.VERSION_1_8

jar {
  baseName = applicationName
  archiveName = "${applicationName}.jar"
  
  doFirst {
    from {
      configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
  }

  // Remove digital signature files to ensure an executable JAR file.
  exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA' 

  manifest {
    attributes 'Main-Class': mainClassName
    attributes 'Class-Path': configurations.compile.collect {
     'libs/' + it.getName()
    }.join(' ')
  }
}

distributions {
  main {
    baseName = applicationName
    contents {
      from { ['LICENSE', 'README.md'] }
      into( 'images' ) {
        from { 'images' }
      }
    }
  }
}
