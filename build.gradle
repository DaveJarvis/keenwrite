version = '1.0.2'

apply plugin: 'java'
apply plugin: 'java-library-distribution'
apply plugin: 'application'

sourceCompatibility = JavaVersion.VERSION_1_8

mainClassName = 'com.scrivenvar.Main'

repositories {
  jcenter()
  maven {
    url "https://nexus.bedatadriven.com/content/groups/public"
  }
}

compileJava {
  options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

dependencies {
  compile 'org.fxmisc.richtext:richtextfx:0.7-M2'
  compile 'com.miglayout:miglayout-javafx:5.0'
  compile 'de.jensd:fontawesomefx-fontawesome:4.5.0'
  compile 'org.ahocorasick:ahocorasick:0.3.0'
  compile 'com.vladsch.flexmark:flexmark:0.6.1'
  compile 'com.vladsch.flexmark:flexmark-ext-gfm-tables:0.6.1'
  compile 'com.fasterxml.jackson.core:jackson-core:2.8.4'
  compile 'com.fasterxml.jackson.core:jackson-databind:2.8.4'
  compile 'com.fasterxml.jackson.core:jackson-annotations:2.8.4'
  compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.8.4'
  compile 'org.yaml:snakeyaml:1.17'
  compile 'com.ximpleware:vtd-xml:2.13'
  compile 'net.sf.saxon:Saxon-HE:9.7.0-14'
  compile 'com.googlecode.juniversalchardet:juniversalchardet:1.0.3'
  compile 'org.apache.commons:commons-configuration2:2.1'
  compile files('libs/renjin-script-engine-0.8.2300-jar-with-dependencies.jar')
}

jar {
  baseName = 'scrivenvar'
  
  // Remove digital signature files to ensure an executable JAR file.
  doFirst { 
    from {
      (configurations.runtime.resolve()).collect {
        it.isDirectory() ? it : zipTree(it)
      }
      {
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
      }
    }
  }
  
  from {
    (configurations.runtime).collect {
      it.isDirectory() ? it : zipTree(it)
    }
  }
    
  manifest {
    attributes 'Main-Class': mainClassName
    attributes 'Class-Path': configurations.compile.collect { 'libs/' + it.getName() }.join(' ')
  }
}

distributions {
  main {
    baseName = 'scrivenvar'
    contents {
      from { ['LICENSE', 'README.md'] }
      into( 'images' ) {
        from { 'images' }
      }
    }
  }
}
